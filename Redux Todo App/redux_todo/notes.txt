Redux Tutorial and Setup

App organization

node_modules
public/
src/
  actions/
  components/ ->App.js
  containers/
  reducers/
.gitignore
package.json
README.md

We have our components and some of them triggers an event. 
That triggers a dispatch() function that sends object {type:... ,payload:...}
This is the info that we need to update the state

In actions folder we have index.js with some actions like:

const someAction = (args) => {
    return {
        type: 'WHAT_WE_WANT_TO_DO',
        payload: {
            what else the : action needs
        }
    }
}

In reducers folder we create our reducers.
Reducers are functions that we give an action object and our state and
based on action.type the update the state. They use payload content if needed

We combine all the reducers in index.js of reducers folder like This

import { combineReducers } from 'redux'
import todosReducer from './todos-reducer'
import filterReducer from './filter-reducer'

const rootReducer = combineReducers({
  todosReducer,
  filterReducer
})

export default rootReducer


In components folder we separate the components that need to care about the 
state and the ones that dont statefull/stateless

To subscribe a component to a store we need connect method from 'react-redux'

We need to define two methods: mapStateToProps and mapDispatchToProps
They do exactly what their name says. In mapStateToProps we map the store state with the names we want to pass as props to that component
In mapDispatchToProps we define methods we want to fire off. In those methods call dispatch funcion and we pass it a result of the actions 
Actions are functions that return action object. They take type - what we want to do in the store and payload - what will be needed to preform that - data like ids or state content
 
